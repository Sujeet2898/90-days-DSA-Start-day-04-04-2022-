Create Project: Stack

Create Package: default

Create class: Node
--------------------
public class Node<T> {

    T data;
    Node<T> next;

    Node(T data){
        this.data = data;
        next = null;
    }
}
-----------------------

Create class: StackUsingLL
----------------------------------------------
public class StackUsingLL<T> {
    private Node<T> head;
    private int size;

    public StackUsingLL(){
        head = null;
        size = 0;
    }

    int size(){
        return size;
    }

    boolean isEmpty(){
        return size() == 0;  // head == null
    }

    T top() throws StackEmptyException {
        if (size() == 0) {
            // StackEmptyException e = new StackEmptyException();
            // throw e;
            throw new StackEmptyException();
        }
        return head.data;
    }

    void push(T element){
        Node<T> newNode = new Node<T>(element);
        newNode.next = head;
        head = newNode;
        size++;
    }

    T pop() throws StackEmptyException {
        if (size() == 0) {
            // StackEmptyException e = new StackEmptyException();
            // throw e;
            throw new StackEmptyException();
        }
        T tempData = head.data;;
        head = head.next;
        size--;
        return tempData;
    }
}
------------------------------------------------------
Create other class: StackFullException
----------------------------------------------
public class StackFullException extends Exception {
    /**
     *
     */
    private static final long serialVersionUID = 1L;
}
-----------------------------------------------
Create other class: StackEmptyException
----------------------------------------------
public class StackEmptyException extends Exception{
    /**
     *
     */
    private static final long serialVersionUID = 1L;
}
---------------------------------------------

Create other class: StackUse
----------------------------------------------
public class StackUse {

    public static void main(String[] args) throws StackFullException {
        StackUsingLL<Integer> stack = new StackUsingLL<>();

        for (int i = 0; i <= 5; i++){
            stack.push(i);
        }
        while (!stack.isEmpty()){
            try {
                System.out.println(stack.pop());
            } catch (StackEmptyException e) {
                // Never reach here
            }
        }

    }
}

----------------------------------------------
Output:
5
4
3
2
1
0


*****************************************

