Q1. Efficiency of an Algorithm
--------------------------------
Two main measures for the efficiency of an algorithm are -

Options
This problem may have one or more correct answers:-
1. Processor and memory
2. Complexity and capacity
3. Time and space 
4. Data and space

Solution(3)

****************************

Q2. Theoretical Analysis
------------------------
In theoretical analysis the time factor when determining the efficiency of algorithm is measured by -

Options
This problem may have one or more correct answers
Counting microseconds
Counting the number of statements in code
Counting the number of unit operations 
Counting the kilobytes of algorithm

Solution(3)

***************************

Q3. Time Complexity
-------------------
If the number of primary operations of an algorithm that takes an array of size n as input are 3n^2 + 5n. The worst case time complexity of the algorithm will be ?

Options
This problem may have one or more correct answers:-
1. O(n^3)
2. O((n^2)*logn)
3. O(n^2) 
4. O(n)

Solution(3)

*************************

Q4. Time Complexity of Code
----------------------------
What will be the Time Complexity of following code in terms of ‘n’ ?

Refer the code for C++ -
for(int i = 0; i < n; i++){
    for(; i < n; i++){
        cout << i << endl;
    }
}

Refer the same code in Java -
for(int i = 0; i < n; i++){
    for(; i < n; i++){
        System.out.println(i);
    }
}

Refer the same code in Python -
    i = 0
    while i<n :
          while i<n :
               print(i)
               i += 1
----------------------------
Options
This problem may have one or more correct answers:-
1. O(n) 
2. O(n^2)
3. O(logn)
4. O(nlogn)

Solution(1)

***************************

Q5. Time Complexity of Code
---------------------------
What will be the Time Complexity of following code in terms of ‘n’ ?

Note : Assume k to be a constant value

Refer the code in C++ -
  for(int i = 0; i < n; i++){
     for(int j = 1 ; j < k; j++){
        cout << (i + j ) << endl;
      }
  }

Refer the same code in Java -
for(int i = 0; i < n; i++){
       for(int j = 1 ; j < k; j++){
         System.out.println(i + j);
       }
}

Refer the same code in Python -
for i in range(n):
    for j in range(k):
        print(i+j)
---------------------------
Options
This problem may have one or more correct answers:-
1. O(n^2)
2. O(n) 
3. O(logn)
4. None of these

Solution(2)

******************************

Q6. Operations for merging
--------------------------
For merging two sorted arrays of size m and n into a sorted array of size m+n, we require operations -

Options
This problem has only one correct answer:-
1. O(m * n)
2. O(m + n) 
3. O(m) if m >= n
4. O(n) if n > m

Solution(2)

**************************

Q7. Worst Case Time complexity of Binary Search
-----------------------------------------------
Worst case time complexity of Binary Search is ?

Options
This problem has only one correct answer:-
1. O(N)
2. O(N^2)
3. O(NLogN)
4. O(LogN) 

Solution(4)






